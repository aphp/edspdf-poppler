# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      # We need to manually clone the repository with submodules because the poppler
      # repo does not allow specific commits to be directly fetched, and the github checkout action
      # split cloning into initial cloning and fetching submodules, which leads git to
      # only try to directly fetch the specific commit of the submodule.
      - name: Manually clone repository with submodules
        run: |
          git clone --recurse-submodules https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git .
          git checkout ${{ github.ref }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.1
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Manually clone repository with submodules
        run: |
          git clone --recurse-submodules https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git .
          git checkout ${{ github.ref }}

      - name: Build sdist
        run: pipx run build --sdist

  PyPI:
    name: Upload to PyPI

    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
