{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Poppler Extractor","text":"<p>We provide a PDF line extractor built on top of Poppler.</p> <p>The poppler software is more difficult to install than its <code>pdfminer-extractor</code> and <code>mupdf-extractor</code> counterparts. In particular, the bindings we provide have not been tested on Windows.</p> <p>License</p> <p>Beware, Poppler is distributed under the GPL license, therefore so is this component, and any model depending on this component must be too.</p>"},{"location":"#edspdf_poppler.PopplerExtractor--installation","title":"Installation","text":"<p>For the licensing reason mentioned above, the <code>poppler-extractor</code> component is distributed in a separate package <code>edspdf-poppler</code>. To install it, use your favorite Python package manager :</p> <pre><code>poetry add edspdf-poppler\n# or\npip install edspdf-poppler\n</code></pre>"},{"location":"#edspdf_poppler.PopplerExtractor--example","title":"Example","text":"API-basedConfiguration-based <pre><code>pipeline.add_pipe(\n    \"poppler-extractor\",\n    config=dict(\n        extract_style=False,\n    ),\n)\n</code></pre> <pre><code>[components.poppler-extractor]\n@factory = \"poppler-extractor\"\nextract_style = false\n</code></pre> <p>and use it as follows:</p> <pre><code>from pathlib import Path\n\n# Apply on a new document\npipeline(Path(\"path/to/your/pdf/document\").read_bytes())\n</code></pre> PARAMETER DESCRIPTION <code>pipeline</code> <p>The pipeline object</p> <p> TYPE: <code>Pipeline</code> DEFAULT: <code>None</code> </p> <code>name</code> <p>The name of the component</p> <p> TYPE: <code>str</code> DEFAULT: <code>'poppler-extractor'</code> </p> <code>extract_style</code> <p>Extract style</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>raise_on_error</code> <p>Whether to raise an error when parsing a corrupted PDF (defaults to False)</p> <p> TYPE: <code>bool</code> DEFAULT: <code>False</code> </p> <code>sort_mode</code> <p>Box sorting mode</p> <ul> <li>\"lines\": sort by lines, without preserving the order of lines inside blocks</li> <li>\"none\": do not sort boxes</li> </ul> <p> TYPE: <code>Literal['lines', 'none']</code> DEFAULT: <code>'none'</code> </p>"}]}